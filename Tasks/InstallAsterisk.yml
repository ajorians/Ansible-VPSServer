# Run with:
# ansible-playbook InstallAsterisk.yml

---
- name: Install Asterisk
  hosts: all
  tasks:

#Install some prerequesits
  - name: Install MPG123 package on OpenSUSE/SUSE Linux
    zypper:
      name: mpg123
      state: present

  - name: Install Autoconf package on OpenSUSE/SUSE Linux
    zypper:
      name: autoconf
      state: present

  - name: Install LibJSonCpp package on OpenSUSE/SUSE Linux
    zypper:
      name: libjsoncpp*
      state: present

  - name: Install Automake package on OpenSUSE/SUSE Linux
    zypper:
      name: automake
      state: present

  - name: Install Flex package on OpenSUSE/SUSE Linux
    zypper:
      name: flex
      state: present

  - name: Install M4 package on OpenSUSE/SUSE Linux
    zypper:
      name: m4
      state: present

  - name: Install NodeJS package on OpenSUSE/SUSE Linux
    zypper:
      name: nodejs20
      state: present

  - name: Install NodeJS-Common package on OpenSUSE/SUSE Linux
    zypper:
      name: nodejs-common
      state: present

  - name: Install NPM package on OpenSUSE/SUSE Linux
    zypper:
      name: npm20
      state: present

  - name: Check if Asterisk download exists
    stat:
      path: /root/asterisk-21.1.0.tar.gz
    register: asterisk_exists

  - name: Download Asterisk 21.1
    ansible.builtin.get_url:
      url: http://downloads.asterisk.org/pub/telephony/asterisk/asterisk-21.1.0.tar.gz
      dest: /root/asterisk-21.1.0.tar.gz
      mode: '1777'
    when: asterisk_exists.stat.exists == false

  - name: Unarchive Asterisk
    ansible.builtin.unarchive:
      src: /root/asterisk-21.1.0.tar.gz 
      dest: /root
      remote_src: yes
      creates: /root/asterisk-21.1.0

  - name: Check if Asterisk has been built exists
    stat:
      path: /root/asterisk-21.1.0/main/asterisk
    register: asteriskbuilt_exists

  - name: Set use MP3 define
    ansible.builtin.shell: sed -i 's|\(^#define DEVICE_FRAME_SIZE \).*|\164|' addons/chan_mobile.c
    args:
      chdir: /root/asterisk-21.1.0

# Switch repo due to connectivity issues
  - name: Change MP3 repo
    ansible.builtin.shell: sed -i 's|svn export https:\/\/svn\.digium\.com\/svn\/thirdparty\/mp3\/trunk|git clone --depth=1 https:\/\/github\.com\/ajorians\/thirdparty-mp3|' contrib/scripts/get_mp3_source.sh
    args:
      chdir: /root/asterisk-21.1.0

  - name: Run Asterisk MP3 script
    ansible.builtin.shell: contrib/scripts/get_mp3_source.sh
    args:
      chdir: /root/asterisk-21.1.0
      creates: addons/mp3

  - name: Configure Asterisk
    ansible.builtin.shell: ./configure --with-pjproject-bundled --with-jansson-bundled
    args:
      chdir: /root/asterisk-21.1.0
      creates: makeopts
    when: asteriskbuilt_exists.stat.exists == false

  - name: Make Asterisk Menuselect
    ansible.builtin.shell: make menuselect.makeopts
    args:
      chdir: /root/asterisk-21.1.0
    when: asteriskbuilt_exists.stat.exists == false

  - name: MenuSelect Core Sounds 1
    ansible.builtin.shell: menuselect/menuselect --enable CORE-SOUNDS-EN-WAV --enable CORE-SOUNDS-EN-ULAW menuselect.makeopts
    args:
      chdir: /root/asterisk-21.1.0
    when: asteriskbuilt_exists.stat.exists == false

  - name: MenuSelect Core Sounds 2
    ansible.builtin.shell: menuselect/menuselect --enable CORE-SOUNDS-EN-GSM --enable CORE-SOUNDS-EN-G722 menuselect.makeopts
    args:
      chdir: /root/asterisk-21.1.0
    when: asteriskbuilt_exists.stat.exists == false

  - name: MenuSelect MP3
    ansible.builtin.shell: menuselect/menuselect --enable format_mp3 --enable chan_mobile menuselect.makeopts
    args:
      chdir: /root/asterisk-21.1.0
    when: asteriskbuilt_exists.stat.exists == false

  - name: Make Asterisk
    ansible.builtin.shell: make
    args:
      chdir: /root/asterisk-21.1.0
    when: asteriskbuilt_exists.stat.exists == false

  - name: Check if Asterisk install exists
    stat:
      path: /usr/sbin/asterisk
    register: asteriskinstalled_exists

  - name: Make Install Asterisk
    ansible.builtin.shell: make install
    args:
      chdir: /root/asterisk-21.1.0
    when: asteriskinstalled_exists.stat.exists == false

# We could not install init scripts for your distribution.
#  - name: Make Config Asterisk
#    ansible.builtin.shell: make config
#    args:
#      chdir: /root/asterisk-21.1.0
#    when: asteriskinstalled_exists.stat.exists == false

  - name: Make Samples Asterisk
    ansible.builtin.shell: make samples
    args:
      chdir: /root/asterisk-21.1.0
    when: asteriskinstalled_exists.stat.exists == false

  - name: Reload Libraries
    ansible.builtin.shell: ldconfig
    when: asteriskinstalled_exists.stat.exists == false

  - name: Ensure group "asterisk" exists
    ansible.builtin.group:
      name: asterisk
      state: present

  - name: Add the user 'asterisk' with group of 'asterisk'
    ansible.builtin.user:
      name: asterisk
      comment: Asterisk
      group: asterisk

  - name: Recursively change ownership of /var/run/asterisk
    ansible.builtin.file:
      path: /var/run/asterisk
      state: directory
      recurse: yes
      owner: asterisk
      group: asterisk

  - name: Recursively change ownership of /etc/asterisk
    ansible.builtin.file:
      path: /etc/asterisk
      state: directory
      recurse: yes
      owner: asterisk
      group: asterisk

  - name: Recursively change ownership of /var/lib/asterisk
    ansible.builtin.file:
      path: /var/lib/asterisk
      state: directory
      recurse: yes
      owner: asterisk
      group: asterisk

  - name: Recursively change ownership of /var/log/asterisk
    ansible.builtin.file:
      path: /var/log/asterisk
      state: directory
      recurse: yes
      owner: asterisk
      group: asterisk

  - name: Recursively change ownership of /var/spool/asterisk
    ansible.builtin.file:
      path: /var/spool/asterisk
      state: directory
      recurse: yes
      owner: asterisk
      group: asterisk

  - name: Recursively change ownership of /usr/lib/asterisk
    ansible.builtin.file:
      path: /usr/lib/asterisk
      state: directory
      recurse: yes
      owner: asterisk
      group: asterisk

  - name: Create a symbolic link
    ansible.builtin.file:
      src: /usr/sbin/asterisk
      dest: /usr/local/bin/asterisk
      state: link

# Can't figure this out yet
#  - name: Add Asterisk shutdown to sudoers
#    ansible.builtin.lineinfile:
#      path: /etc/sudoers
#      line: 'asterisk ALL = NOPASSWD: /sbin/shutdown'

#  - name: Add Asterisk reboot to sudoers
#    ansible.builtin.lineinfile:
#      path: /etc/sudoers
#      line: 'asterisk ALL = NOPASSWD: /sbin/reboot'

